// <auto-generated />
using System;
using API_Tutorial_ProductManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API_Tutorial_ProductManager.Migrations
{
    [DbContext(typeof(DContext))]
    [Migration("20240812042234_AddTableUser")]
    partial class AddTableUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API_Tutorial_ProductManager.Data.Detailed_Orders", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Ord")
                        .HasColumnType("integer");

                    b.Property<byte>("Discount")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id", "Id_Ord");

                    b.HasIndex("Id_Ord");

                    b.ToTable("Detailed_Orders", (string)null);
                });

            modelBuilder.Entity("API_Tutorial_ProductManager.Data.Order", b =>
                {
                    b.Property<int>("Id_Ord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Ord"));

                    b.Property<DateTime?>("DelDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("OrdDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now() AT TIME ZONE 'UTC'");

                    b.Property<int>("OrdStatus")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ReceiverAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Ord");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("API_Tutorial_ProductManager.Data.Product_data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<byte>("Discount")
                        .HasColumnType("smallint");

                    b.Property<int?>("Id_Type")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("Id_Type");

                    b.ToTable("ProductManager");
                });

            modelBuilder.Entity("API_Tutorial_ProductManager.Data.Products_Type", b =>
                {
                    b.Property<int>("Id_Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Type"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id_Type");

                    b.ToTable("Products_Type");
                });

            modelBuilder.Entity("API_Tutorial_ProductManager.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API_Tutorial_ProductManager.Data.Detailed_Orders", b =>
                {
                    b.HasOne("API_Tutorial_ProductManager.Data.Product_data", "Products")
                        .WithMany("Detailed_Orders")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Detail_Orders_Product");

                    b.HasOne("API_Tutorial_ProductManager.Data.Order", "Order")
                        .WithMany("Detailed_Orders")
                        .HasForeignKey("Id_Ord")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Detail_Orders_Order");

                    b.Navigation("Order");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("API_Tutorial_ProductManager.Data.Product_data", b =>
                {
                    b.HasOne("API_Tutorial_ProductManager.Data.Products_Type", "Products_Type")
                        .WithMany("Product_Datas")
                        .HasForeignKey("Id_Type");

                    b.Navigation("Products_Type");
                });

            modelBuilder.Entity("API_Tutorial_ProductManager.Data.Order", b =>
                {
                    b.Navigation("Detailed_Orders");
                });

            modelBuilder.Entity("API_Tutorial_ProductManager.Data.Product_data", b =>
                {
                    b.Navigation("Detailed_Orders");
                });

            modelBuilder.Entity("API_Tutorial_ProductManager.Data.Products_Type", b =>
                {
                    b.Navigation("Product_Datas");
                });
#pragma warning restore 612, 618
        }
    }
}
